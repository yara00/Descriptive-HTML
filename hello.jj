PARSER_BEGIN(Hello)
package egtry.hello;

import java.io.StringReader;

public class Hello {
  	public static boolean valid = true;
    public static void main(String[] args) throws Exception {
      StringReader in=new StringReader("ADD HEADING WITH TEXT \"Hello World\"");
      Hello hello=new Hello(in);
      try {
			Hello.create();
		} catch (ParseException e) {
			valid = false;
		}
    }
    
}

PARSER_END(Hello)



SKIP: { " " |"\t" |"\n" |"\r" }

TOKEN: { "ADD" | "WITH" | "IMAGE" | "SOURCE" | "HEADING" | "PARAGRAPH" | "LINK" | "AND" | "TEXT" | "COLOR" | "FONT" }
TOKEN: { < ALPHANUMERIC: ["0"-"9"] | ["A"-"Z"] |  ["a"-"z"] | "/" | ":" | "." | "_" > }
TOKEN: { < QOUTE: "\""> }



  
String create(): {
  Token t; String s = "";
  }
  {
     ("ADD" { s += element() + "\n"; })* < EOF> { return s;}
     
  }

String element(): {
  String element= "" ;
  }
  {
     element = header() { return element;} | element =  img() { return element;}  |
     element = url() { return element;} | element = para() { return element;}

  }
String img(): {
   String image ="";
   }
   {
      "IMAGE"
      {
        image = image + "<img";
      } "WITH" "SOURCE"
      { image = image + " src=\"";
       return  image + quote() + sentence()+ quote() +"\" />";
      }
   }
String header():
   {
     String[] decText;
   }
   {
       "HEADING"  decText = decorated_text()
       {
         if(decText[1].equals(""))
         	return "<h1>" + decText[0] + "</h1>";
         else
         	return "<h1 " + "style = \"" + decText[1] + "\">" + decText[0] + "</h1>";
       }
   }
String para():
   {
     String[] decText = {"", ""};
   }
   {
      "PARAGRAPH" decText =  decorated_text()
      {
        if(decText[1].equals(""))
        	return "<p>" + decText[0] + "</p>";
        else
        	return "<p " + "style=\"" +decText[1] + "\">" + decText[0] + "</p>";
      }
   }
String url():
   {
   }
   {
   "LINK"  {return decorated_url();}
   }
String [] decorated_text():
   {
     String[] arr = new String[2];
     arr[1] = "";
     arr[0] = "";
     String text = "";
     String styleColor = "";
     String styleFont = "";
   }
   {
    (
      (LOOKAHEAD(2)  text = text()  | LOOKAHEAD(2) styleFont = font() { arr[1] = styleFont + arr[1];} |
       LOOKAHEAD(2) styleColor = color(){ arr[1] = styleColor + arr[1]; })
       (LOOKAHEAD(2) "AND" ( LOOKAHEAD(2) text = text() | LOOKAHEAD(2)  styleFont = font() { arr[1] = styleFont + arr[1];}  |
       LOOKAHEAD(2)styleColor = color(){arr[1] = styleColor + arr[1];}) )*
     )
    {
      arr[0] = text;
      return  arr;
    }
   
   }
String decorated_url():
   {
     String[] arr1 = { "", "" };
     String[] arr2= { "", "" };
     String link = "";
   }
   {
     (( arr1 = decorated_text() "AND")* link= link()( "AND"arr2 = decorated_text() )*)
     {
       String text = "";
       if(!arr1[0].equals("")){
         text = arr1[0];
         }
       if(!arr2[0].equals("")){
         text = arr2[0];
         }
       if(arr1[1] == "" && arr2[1] == "")
       	return "<a " + "href=\"" + link + "\">" + text+"</a>";
       else
       	return "<a " + "href=\"" + link + "\" " + "style=\""+ arr1[1] + arr2[1] + "\""  + ">" + text+"</a>";       
     }
   }
String text():
   {
     String sentence = "";
   }
   {
    "WITH" "TEXT" quote() (sentence = sentence()) quote(){
      return sentence;}
   }
String color():
   {
     
   } 
   {
    "WITH" "COLOR" { return "color:" + quote() + sentence()+ quote() + ";";}
   }
String font():
   {
 
   }
   {
    "WITH" "FONT" { return "font-family:" + quote() + sentence()+ quote() + ";";}
   }
String link():
   {
   }
   {
     "WITH LINK" { return quote()+sentence()+quote();}
   }
String sentence():
   {
     Token alphanumric;  String alphanum = "";
   }
   {
     (alphanumric = < ALPHANUMERIC > { alphanum += alphanumric.image; })* {  return alphanum;}
   }
String quote():
   {
   }
   {
     < QOUTE>
      {
        return "";}
   }